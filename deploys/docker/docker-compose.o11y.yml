version: '3.9'

x-default-logging: &logging
  driver: 'json-file'
  options:
    max-size: '5m'
    max-file: '2'

services:
  otel-collector:
    image: otel/opentelemetry-collector:0.61.0
    command:
      [
        '--config=/etc/otel-collector.yaml',
        '--feature-gates=pkg.translator.prometheus.NormalizeName',
      ]
    volumes:
      - ./etc/otel-collector.yaml:/etc/otel-collector.yaml
    ports:
      - '1888:1888' # pprof extension
      - '8888:8888' # Prometheus metrics exposed by the collector
      - '8889:8889' # Prometheus exporter metrics
      - '13133:13133' # health_check extension
      - '4317:4317' # OTLP gRPC receiver
      - '4318:4318' # OTLP HTTP receiver
      - '55679:55679' # zpages extension
    depends_on:
      - zipkin
      - prometheus
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped
    logging: *logging

  zipkin:
    image: openzipkin/zipkin:latest
    container_name: zipkin
    environment:
      - STORAGE_TYPE=mem
      - JAVA_OPTS=-Xms128m -Xmx128m
      - QUERY_PORT=9411
      - SELF_TRACING_ENABLED=true
    ports:
      - '9411:9411'
    logging: *logging
    networks:
      - hutech-network

  fluentd:
    image: fluent/fluentd:latest
    container_name: fluentd
    volumes:
      - ./etc/fluent.conf:/fluentd/etc/fluent.conf
    ports:
      - '24224:24224'
      - '24224:24224/udp'
    logging: *logging
    networks:
      - hutech-network

  elasticsearch:
    image: elasticsearch:latest
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:9200 || exit 1
    logging: *logging
    networks:
      - hutech-network

  kibana:
    image: kibana:latest
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=admin
      - ELASTICSEARCH_PASSWORD=admin@123
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:5601 || exit 1
    logging: *logging
    networks:
      - hutech-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus.yaml
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --storage.tsdb.retention.time=1h
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
    ports:
      - '9090:9090'
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/status || exit 1
    logging: *logging
    networks:
      - hutech-network

  grafana:
    image: grafana/grafana:9.2.20
    container_name: grafana
    extra_hosts: ['host.docker.internal:host-gateway']
    volumes:
      - ./provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./provisioning/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./provisioning/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - '3000:3000'
    depends_on:
      - prometheus
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1
    logging: *logging
    networks:
      - hutech-network

networks:
  hutech-network:
    name: hutech-network
    external: true
