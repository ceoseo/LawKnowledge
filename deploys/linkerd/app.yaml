---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: law-knowledge
  labels:
    app: api-gateway
    tier: backend
  spec:
    replicas: 1
    selector:
    matchLabels:
      app: api-gateway
      tier: backend
      version: v1
  template:
    metadata:
      labels:
        app: api-gateway
        tier: backend
        version: v1
    spec:
      containers:
        - name: api-gateway
          image: ghcr.io/foxminchan/api-gateway:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 7070
              name: grpc
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "8079"
            - name: AUTH_SVC_URL
              value: "http://auth-svc"
            - name: AUTH_SVC_PORT
              value: "8081"
            - name: LAW_SVC_URL
              value: "http://law-svc"
            - name: LAW_SVC_PORT
              value: "8082"
            - name: SEARCH_SVC_URL
              value: "http://search-svc"
            - name: SEARCH_SVC_PORT
              value: "8083"
            - name: CHAT_SVC_URL
              value: "http://chat-svc"
            - name: CHAT_SVC_PORT
              value: "8084"
            - name: REDIS_URL
              value: cmVkaXM6LyRodXRlY2g6MTIzQHJlZGlzOjYzNzk=
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
---
apiVersion: apps/v1
kind: Service
metadata:
  name: api-gateway
  namespace: law-knowledge
  labels:
    app: api-gateway
    tier: backend
  spec:
    type: ClusterIP
    ports:
      - port: 8080
        targetPort: http
        protocol: TCP
        name: http
      - port: 7070
        targetPort: grpc
        protocol: TCP
        name: grpc
    selector:
      app: api-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-svc
  namespace: law-knowledge
  labels:
    app: auth-svc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: auth-svc
        tier: backend
        version: v1
    template:
      metadata:
        labels:
          app: auth-svc
          tier: backend
          version: v1
      spec:
        containers:
          - name: auth-svc
            image: ghcr.io/foxminchan/auth-svc:latest
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 8081
                name: http
              - containerPort: 7071
                name: grpc
            env:
              - name: NODE_ENV
                value: "production"
              - name: PORT
                value: "8081"
              - name: URL
                value: "http://auth-svc"
              - name: DATABASE_URL
                value: cG9zdGdyZXM6Ly9wb3N0Z3JlczpodXRlY2hAMTIzQGxhdy1kYjoxMjMvbGF3X2tub3dsZWRnZQ==
            livenessProbe:
              httpGet:
                path: /health
                port: 8081
              initialDelaySeconds: 10
              periodSeconds: 10
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
---
apiVersion: apps/v1
kind: Service
metadata:
  name: auth-svc
  namespace: law-knowledge
  labels:
    app: auth-svc
    tier: backend
  spec:
    type: ClusterIP
    ports:
      - port: 8081
        targetPort: http
        protocol: TCP
        name: http
      - port: 7071
        targetPort: grpc
        protocol: TCP
        name: grpc
    selector:
      app: auth-svc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: law-svc
  namespace: law-knowledge
  labels:
    app: law-svc
    tier: backend
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: law-svc
        tier: backend
        version: v1
    template:
      metadata:
        labels:
          app: law-svc
          tier: backend
          version: v1
      spec:
        containers:
          - name: law-svc
            image: ghcr.io/foxminchan/law-svc:latest
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 8082
                name: http
              - containerPort: 7072
                name: grpc
            env:
              - name: NODE_ENV
                value: "production"
              - name: PORT
                value: "8082"
              - name: URL
                value: "http://law-svc"
              - name: DATABASE_URL
                value: cG9zdGdyZXM6Ly9wb3N0Z3Jlczo9aHV0ZWNoQDEyMwpsYXctZGI6NTQzMgpsYXctc3ZjX3Ni
            livenessProbe:
              httpGet:
                path: /health
                port: 8082
              initialDelaySeconds: 10
              periodSeconds: 10
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
---
apiVersion: apps/v1
kind: Service
metadata:
  name: law-svc
  namespace: law-knowledge
  labels:
    app: law-svc
  spec:
    type: ClusterIP
    ports:
      - port: 8082
        targetPort: http
        protocol: TCP
        name: http
      - port: 7072
        targetPort: grpc
        protocol: TCP
        name: grpc
    selector:
      app: law-svc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search-svc
  namespace: law-knowledge
  labels:
    app: search-svc
    tier: backend
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: search-svc
        tier: backend
        version: v1
    template:
      metadata:
        labels:
          app: search-svc
          tier: backend
          version: v1
      spec:
        containers:
          - name: search-svc
            image: ghcr.io/foxminchan/search-svc:latest
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 8083
                name: http
              - containerPort: 7073
                name: grpc
            env:
              - name: PORT
                value: "8083"
              - name: URL
                value: "http://search-svc"
            livenessProbe:
              httpGet:
                path: /health
                port: 8083
              initialDelaySeconds: 10
              periodSeconds: 10
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
---
apiVersion: apps/v1
kind: Service
metadata:
  name: search-svc
  namespace: law-knowledge
  labels:
    app: search-svc
    tier: backend
  spec:
    type: ClusterIP
    ports:
      - port: 8083
        targetPort: http
        protocol: TCP
        name: http
      - port: 7073
        targetPort: grpc
        protocol: TCP
        name: grpc
    selector:
      app: search-svc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-svc
  namespace: law-knowledge
  labels:
    app: chat-svc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: chat-svc
        tier: backend
        version: v1
    template:
      metadata:
        labels:
          app: chat-svc
          tier: backend
          version: v1
      spec:
        containers:
          - name: chat-svc
            image: ghcr.io/foxminchan/chat-svc:latest
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 8084
                name: http
              - containerPort: 7074
                name: grpc
            env:
              - name: PORT
                value: "8084"
              - name: URL
                value: "http://chat-svc"
              - name: DATABASE_URL
                value: rszqczoyL3Bvc3RncmVzOjpodXRlY2hAMTIzQGxhdy1kYjoxMjMvbGF3X2tub3dsZWRnZQ==
            livenessProbe:
              httpGet:
                path: /health
                port: 8084
              initialDelaySeconds: 10
              periodSeconds: 10
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
---
apiVersion: apps/v1
kind: Service
metadata:
  name: chat-svc
  namespace: law-knowledge
  labels:
    app: chat-svc
    tier: backend
  spec:
    type: ClusterIP
    ports:
      - port: 8084
        targetPort: http
        protocol: TCP
        name: http
      - port: 7074
        targetPort: grpc
        protocol: TCP
        name: grpc
    selector:
      app: chat-svc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: website
  namespace: law-knowledge
  labels:
    app: website
    tier: frontend
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: website
        tier: frontend
        version: v1
    template:
      metadata:
        labels:
          app: website
          tier: frontend
          version: v1
      spec:
        containers:
          - name: website
            image: ghcr.io/foxminchan/website:latest
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 8085
                name: http
            env:
              - name: NODE_ENV
                value: "production"
              - name: VITE_PROD_URL
                value: "http://api-gateway:8080"
            livenessProbe:
              httpGet:
                path: /health
                port: 8085
              initialDelaySeconds: 10
              periodSeconds: 10
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
---
apiVersion: apps/v1
kind: Service
metadata:
  name: website
  namespace: law-knowledge
  labels:
    app: website
    tier: frontend
  spec:
    type: ClusterIP
    ports:
      - port: 8085
        targetPort: http
        protocol: TCP
        name: http
    selector:
      app: website
