#
# Copyright (c) 2023-present Hutech University. All rights reserved
# Licensed under the MIT License
#
# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from chat_svc.grpc import message_service_pb2 as message__service__pb2


class ChatHistoryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetChatHistory = channel.unary_unary(
                '/ChatHistoryService/GetChatHistory',
                request_serializer=message__service__pb2.GetChatHistoryRequest.SerializeToString,
                response_deserializer=message__service__pb2.GetChatHistoryResponse.FromString,
                )
        self.AddChatHistory = channel.unary_unary(
                '/ChatHistoryService/AddChatHistory',
                request_serializer=message__service__pb2.AddChatHistoryRequest.SerializeToString,
                response_deserializer=message__service__pb2.AddChatHistoryResponse.FromString,
                )
        self.DeleteChatHistory = channel.unary_unary(
                '/ChatHistoryService/DeleteChatHistory',
                request_serializer=message__service__pb2.DeleteChatHistoryRequest.SerializeToString,
                response_deserializer=message__service__pb2.DeleteChatHistoryResponse.FromString,
                )


class ChatHistoryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetChatHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddChatHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteChatHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatHistoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetChatHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChatHistory,
                    request_deserializer=message__service__pb2.GetChatHistoryRequest.FromString,
                    response_serializer=message__service__pb2.GetChatHistoryResponse.SerializeToString,
            ),
            'AddChatHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.AddChatHistory,
                    request_deserializer=message__service__pb2.AddChatHistoryRequest.FromString,
                    response_serializer=message__service__pb2.AddChatHistoryResponse.SerializeToString,
            ),
            'DeleteChatHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteChatHistory,
                    request_deserializer=message__service__pb2.DeleteChatHistoryRequest.FromString,
                    response_serializer=message__service__pb2.DeleteChatHistoryResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ChatHistoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatHistoryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetChatHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChatHistoryService/GetChatHistory',
            message__service__pb2.GetChatHistoryRequest.SerializeToString,
            message__service__pb2.GetChatHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddChatHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChatHistoryService/AddChatHistory',
            message__service__pb2.AddChatHistoryRequest.SerializeToString,
            message__service__pb2.AddChatHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteChatHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ChatHistoryService/DeleteChatHistory',
            message__service__pb2.DeleteChatHistoryRequest.SerializeToString,
            message__service__pb2.DeleteChatHistoryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
